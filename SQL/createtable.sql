
-- drop table sectoin for reference
drop table commonoperation;
drop table columns;
drop table tables;
--drop table codetable;
drop table filtercandidate;
drop table typemapping;
drop TABLE fieldfilter;
drop table jobrules;
drop table grouplayer;
drop TABLE  mdajob;
drop view columnview;
drop view filterreference;

--Create database mdaapp as perm=20000000,spool=10000000;  --根据实行情况建立database，可不执行
--database mdaapp;


-- 多维分析任务表
create table mdajob
(  jobid integer not null
   ,jobname varchar(50) not NULL  --任务名称
   ,description varchar(500)  --任务描述
   ,creatorname varchar(50) not NULL  --创建人姓名，目前尚未处理，备用
   ,createtime timestamp  --创建时间
   ,currentstatus varchar(2) not null DEFAULT 'R'  --W wait, R--running S--success F-fail
   ,previousfinished timestamp  --前一次结束时间
   ,referencecount INTEGER    -- 引用计数，目前没有使用
   ,resultlink varchar(1000)  --文件下载链接
   ,sqlstatement varchar(31000) -- SQL 描述 ，目前设定为31K，一般情况下应该够用
   ,usersql varchar(31000)  -- 用户自定义SQL
   ,statusdescription varchar(200)  --状态描述，可存储文字，在界面上显示用
   ,outputfilename varchar(200)   --输出文件名，记录 excel的文件
   ,primary key(jobid)
);


-- create table starcodetable
-- (
--    codetype integer
--   ,codevalue varchar(20)
--   ,codetext varchar(50)
-- ) primary index (codetype,codevalue,codetext);
--insert into starcodetable values ( 1,'01' ,'五星钻' );
--insert into starcodetable values ( 1,'02' ,'五星金');
--insert into starcodetable values ( 1,'03' ,'五星银');
--insert into starcodetable values ( 1,'04' ,'四星');
--insert into starcodetable values ( 1,'05' ,'三星');
--insert into starcodetable values ( 1,'06' ,'二星');
--insert into starcodetable values ( 1,'07' ,'一星');
--insert into starcodetable values ( 1,'08' ,'准星');
--insert into starcodetable values ( 1,'09' ,'未评级');

-- create table provincecodetable
-- (
--    codetype integer
--   ,codevalue integer
--   ,codetext varchar(50)
-- ) primary index (codetype,codevalue,codetext);




--drop table tables;
-- 记录多维分析的数据源表信息
create table tables(
  tableid INTEGER not null GENERATED BY DEFAULT AS IDENTITY
    (START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO CYCLE
    )
  ,dbtype varchar(20) not null default 'TERADATA' --数据库类型，为将来多数据库宽展备用
  ,dbname varchar(30) not null default ''   --数据库名称
  ,schemaname varchar(30) not null default '' --schema 名称，为将来多数据库宽展备用
  ,tablename varchar(50) not null -- 数据表名称
  ,tabletype varchar(20)  -- 数据库类型， view or table ，备用
  ,comments varchar(200)  --数据表描述信息，目前对应于teradata 的comment，扩展至多数据库后可存储其他数据库信息
  ,creatorname varchar(100) -- 创建人名称，权限管理备用
--  ,transactionlog varchar(10) not NULL
--  ,protection varchar(10)
--  ,commitoption varchar(200)
  ,primary key(tableid)
  ,unique(dbtype,dbname,schemaname,tablename)
) ;

--drop table columns;
-- 记录多维分析的数据字段信息表，后期增加了不少字段，见后面alter table部分
create table columns(
  colId INTEGER not null GENERATED BY DEFAULT AS IDENTITY
    (START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO CYCLE
    )
  ,tableid integer not null references tables(tableid)
  ,colname varchar(50) not NULL   --字段名称
  ,coltype varchar(20)   --字段类型，备用，设计为根据字段类型可做特殊判断
  ,colformat varchar(40)  -- 字段格式，备用，设计为根据字段格式可做特殊判断
  ,colmaxlength integer --字段最大长度，备用，设计为根据字段长度可做特殊判断
  ,coldecimal INTEGER --字段小数位，备用，设计为根据字段长度可做特殊判断
  ,colfraction INTEGER  --字段小数位，备用，设计为根据字段长度可做特殊判断
  ,comments varchar(200) --字段描述，目前做展示用
  ,coltitle varchar(200)  --字段标题，于comments略有重复，为对应teradata数据库保留，酌情使用
  ,defaultInputType varchar(20) not null default 'textinput'  --对应界面输入类型，需手工设定，可以为monthinput，
  ,defaultCodeTable varchar(50)   --对应的码表，目前未使用
  ,primary key(colId)
  ,unique (tableid,colname)
) ;

create table commonoperation(
  operationid integer not null GENERATED BY DEFAULT AS IDENTITY
    (START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    NO CYCLE
    )
  ,dbtype varchar (20) not NULL     -- 数据库类型，将来扩展到多数据库时可以使用
  ,virtualtype varchar(20) not NULL   -- 虚拟数据类型，在help table 导入时，类型可能为I（整数），I2（short int）等，均需要对应到 数字
  ,sqloperator varchar(20) not null   -- SQL 操作符， 如 > ,< , min 等
  ,sqltemplate varchar(100) not NULL  -- SQL 脚本，采用 min($FN) 的模式，其中$FN会被系统自动换成字段名
  ,operationplace varchar(20) not NULL  --either in where, select result, order by ,group by,inner join
  ,operationtitle varchar(100) not NULL -- SQL操作符的界面展示，如 小于 大于等
  ,paramcount INTEGER not null default 0 -- 所需要的参数个数
  ,primary key(operationid)
);

--drop table commonoperation;
-- 初始化的部分操作符
insert into commonoperation (operationid,dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values (0,'any','any','','','any','无操作',0);
insert into commonoperation (operationid,dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values (1,'TERADATA','any','asc',' $FN asc ','orderby','升序',0);
insert into commonoperation (operationid,dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values (2,'TERADATA','any','desc',' $FN desc ','orderby','降序',0);
insert into commonoperation (operationid,dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values (3,'TERADATA','any',' and ',' and ','connector','并且',0);
insert into commonoperation (operationid,dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values (4,'TERADATA','any',' or ',' or ','connector','或者',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','>','$FN > $PARAM1','where','大于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','>=','$FN >= $PARAM1','where','大于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','=','$FN = $PARAM1','where','等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','<=','$FN <= $PARAM1','where','小于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','<','$FN < $PARAM1','where','小于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','<>','$FN <> $PARAM1','where','不等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','SUM','SUM($FN)','result','求和',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','AVERAGE','Average($FN)','result','求平均',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','MAX','MAX($FN)','result','求最大值',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','MIN','MIN($FN)','result','求最小值',0);

insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','','count($FN)','result','计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','','count( distinct $FN)','result','去重计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','','count($FN)','result','计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','','count( distinct $FN)','result','去重计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','','count($FN)','result','计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','','count( distinct $FN)','result','去重计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','','count($FN)','result','计数',0);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','','count( distinct $FN)','result','去重计数',0);




insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','>','$FN > $PARAM1','having','大于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','>=',' $FN >= $PARAM1','having','大于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','=',' $FN= $PARAM1','having','等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','<=',' $FN<= $PARAM1','having','小于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','<',' $FN< $PARAM1','having','小于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER','<>',' $FN<> $PARAM1','having','不等于',1);


insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','>','$FN > ''$PARAM1''','where','大于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','>=','$FN >= ''$PARAM1''','where','大于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','=','$FN = ''$PARAM1''','where','等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','<=','$FN <= ''$PARAM1''','where','小于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','<','$FN < ''$PARAM1''','where','小于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','DA','<>','$FN <> ''$PARAM1''','where','不等于',1);

insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','>','$FN > ''$PARAM1''','where','大于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','>=','$FN >= ''$PARAM1''','where','大于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','=','$FN = ''$PARAM1''','where','等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','<=','$FN <= ''$PARAM1''','where','小于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','<','$FN < ''$PARAM1''','where','小于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TS','<>','$FN <> ''$PARAM1''','where','不等于',1);

insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','>','$FN > $PARAM1','where','大于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','>=','$FN >= ''PARAM1''','where','大于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','=','$FN = ''$PARAM1''','where','等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','<=','$FN <= ''$PARAM1''','where','小于等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','<','$FN < ''$PARAM1''','where','小于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','<>','$FN <> ''$PARAM1''','where','不等于',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT','like','$FN like ''%$PARAM1%''','where','类似于',1);

insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','NUMBER',' in ',' $FN in ($PARAM1)','where','包含',1);
insert into commonoperation (dbtype,virtualtype,sqloperator,sqltemplate,operationplace,operationtitle,paramcount) values ('TERADATA','TEXT',' in ',' $FN in ($PARAM1)','where','包含',1);

-- 类型映射表，在使用Help Table 导入表结构的时候，导入和字段类型可能是数据库内部类型
-- 如 I， I2 ， CV ， CF 等，需要对应到系统中统一处理的虚拟类型
create table typemapping(
  coltype not null varchar(10)  -- 字段类型
  ,virtualtype VARCHAR(20)    -- 对应的虚拟类型
) primary index(coltype);;
insert into typemapping values ('I2','NUMBER');
insert into typemapping values ('I','NUMBER');
insert into typemapping values ('D','NUMBER');
insert into typemapping values ('CF','TEXT');
insert into typemapping values ('CV','TEXT');
insert into typemapping values ('DA','TEXT');
insert into typemapping values ('DA','date');
insert into typemapping values ('TS','TIMESTAMP');
insert into typemapping values ('any','any');

-- 维度表，对应于多维分析的预定义维度的存储，调用，在多维分析任务中可以引用此表中的数据
-- 此表控制每一个维度在界面上的显示方式，可以被分析任务引用
create table fieldfilter(
  filterId integer not null GENERATED BY DEFAULT AS IDENTITY
    (START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    NO CYCLE
    )
    --op=operation
  ,colId integer not null default -1  -- if colId is not null, we can assign some speical op to specific column
  ,opsql varchar(10000) --   $FN $OPERATOR1 $PARAM1 $CONNECTOR $FN $OPERATOR2 $PARAM2
  ,extrasql varchar(10000) -- store the extra sql such as having
  ,place varchar(20) not NULL  --either in where, select result, order by ,group by,inner join
  ,optitle varchar(100) not NULL   -- 维度的标题
  ,description varchar(500)   --维度描述
  ,showdescription INTEGER not null default 0   --显示描述，备用，目前未使用
  ,creator varchar(20)  --创建人
  ,createtime TIMESTAMP not null default current_timestamp  --创建时间
  ,resultoperatorid integer  -- 在输出维度中，用于存储计算的操作符ID
  ,op1label varchar(50)     --$op1label $OPERATOR1 $param1_left_label $PARAM1 $param1_right_label， 在where 维度中，对应操作符1的界面显示值
  ,op1candidate varchar (500)  -- 对应操作符1的可选操作，存储ID（commonoperation id）
  ,showoperator1 smallint not null DEFAULT 1  --是否显示操作符1
  ,param1leftlabel varchar(20) --参数1左侧显示标题，如为空则不显示
  ,param1style varchar(100)       --控制参数1输入类型，可以为 dateselector（日期类型）,monthselector（年月类型），timeselector（时间类型），
                                    -- comboselector（单选类型），multiselector（多选类型）,datetimeselector（时间戳类型）,textinput（文字或数字输入类型）
  ,param1rightlabel varchar(20)  --参数1右侧显示标题，如为空则不显示
  ,showconnector smallint not NULL default 1  --是否显示关系操作符，为1时在维度窗口中将显示关系操作符 and/or
  ,connectorcandidate varchar(50)   --候选关系操作符，目前没有使用
  ,opconnectorid integer
  --,opconnectiontitle varchar(50)  -- $CONNECTOR $OPERATOR2 $PARAM2
  --$op2label $OPERATOR2 $ param2_left_label $PARAM2 $param2rightlabel
  ,op2label varchar(50)  --$op2label $OPERATOR2 $ param2_left_label $PARAM2 $param2rightlabel,在where 维度中，对应操作符1的界面显示值
  ,param2leftlabel varchar(20) --参数2左侧显示标题，如为空则不显示
  ,op2candidate varchar(500) -- 对应操作符2的可选操作，存储ID（commonoperation id）
  ,showoperator2 smallint not null DEFAULT 1   --是否显示操作符1
  ,param2rightlabel varchar(20)  --参数1右侧显示标题，如为空则不显示
  ,param2style varchar(100)   --见 param1style
  ,paramcount INTEGER not null default 0  --维度参数计数
  ,param1checkrule varchar(100)  -- 参数1检查规则，目前未使用，如 $PARAM1 >5 and $PARAM1 <100,用select送到数据库验证
  ,param2checkrule varchar(100)  -- 参数2检查规则，目前未使用，如 $PARAM2 >5 and $PARAM2 <100,用select送到数据库验证
  ,paramscheckrule varchar(100) -- 参数1，2检查规则，目前未使用，如 $PARAM1 > $PARAM2
  -- following field are used when user save the filter
  ,op1Id INTEGER  --操作符1缺省值
  ,op2Id INTEGER  --操作符2缺省值
  ,param1value VARCHAR (500)  --参数1缺省值
  ,param2value varchar (500)  --参数2缺省值
  ,outputtitle varchar(100)  --输出字段标题
  ,primary key(filterId)
);

-- 参入部分缺省的维度
insert into  fieldfilter (filterId,colId,opsql,place,optitle,showconnector,paramcount) values (0,0,'','','无操作',0,0);
insert into  fieldfilter (filterId,colId,opsql,place,optitle,showconnector,paramcount) values (1,0,'','where','条件筛选',1,2);
insert into  fieldfilter (filterId,colId,opsql,place,optitle,showconnector,paramcount) values (2,0,'','result','运算结果过滤',1,2);
--insert into  fieldfilter (filterId,colId,opsql,place,optitle,paramcount) values (3,0,'','result','计算结果过滤',2);
--insert into  fieldfilter (filterId,colId,opsql,place,optitle,showconnector,paramcount,resultoperatorid) values (3,0,'','groupby','数据分组',0,0,0);
insert into  fieldfilter (filterId,colId,opsql,place,optitle,showconnector,paramcount,resultoperatorid) values (4,0,'','groupby','数据分档',0,0,1);
--update fieldfilter set optitle='数值判断操作' where filterId=1;

--用户记录每个维度，如果参数输入类型是单选或多选，界面展示的选择值
create table filtercandidate(
  candidateid integer not null GENERATED BY DEFAULT AS IDENTITY
    (START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO CYCLE
    )
  ,filterId INTEGER not null default 1 --对应的filterId
  ,colId INTEGER not null  -- 对应的 字段ID
  ,paramid INTEGER   not null default 0--can be 0,1,2 which corresponing to $Connector, $param1,$Param2
  ,place varchar(50) not null default 'where'
  ,candidatetitle varchar(50)   -- this is a display value in combobox or radio box
  ,candidatevalue varchar(50)   -- this is a SQL value which will fill in param1 value
  ,primary key (candidateid)
);


insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'01' ,'五星钻' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'02' ,'五星金');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'03' ,'五星银');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'04' ,'四星');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'05' ,'三星');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'06' ,'二星');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'07' ,'一星');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'08' ,'准星');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (6,'09' ,'未评级');

insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10100', '北京');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10200', '上海');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10300', '天津');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10400', '重庆');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10500', '贵州');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10600', '湖北');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10700', '陕西');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10800', '河北');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'10900', '河南');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11000', '安徽');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11100', '福建');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11200', '青海');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11300', '甘肃');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11400', '浙江');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11500', '海南');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11600', '黑龙江');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11700', '江苏' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11800', '吉林' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'11900', '宁夏');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12000', '山东');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12100', '山西');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12200', '新疆' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12300', '广东' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12400', '辽宁' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12500', '广西' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12600', '湖南' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12700', '江西' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12800', '内蒙古');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'12900', '云南' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'13000', '四川' );
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (3,'13100', '西藏');

insert into filtercandidate (colId,candidatevalue,candidatetitle) values (5,'1', '是');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (5,'0', '否');

insert into filtercandidate (colId,candidatevalue,candidatetitle) values (8,'1', '是');
insert into filtercandidate (colId,candidatevalue,candidatetitle) values (8,'0', '否');

-- 多维分析任务规则（rule）表，任何一个多维分析任务可以看成多个rule组合，每一个rule可以理解为SQL的子句，例如
--select rule1，rule2,rule3 from table_name where rule4 and rule5 group by rule6,rule7 having rule8
--其中，rule可以带自己的操作符，并且可以利用param1 和param2指向其他rule
-- 如果 rule 引用的filter，rule中的参数会覆盖filter的参数
-- group by 子句中，rule代表用户明确定义的分档操作，而select子句中的rule，有系统判断自动添加到group by中
-- where 子句 和having 子句中的 and or等用单独的rule标识
create table jobrules(
  ruleId integer not NULL GENERATED BY DEFAULT AS IDENTITY
    (START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    NO CYCLE
    )
  ,jobid INTEGER not null references mdajob(jobid) --对应的多维分析任务ID
  ,filterId integer  --引用的Filter
  ,colId integer not null  -- 对应的字段ID
  ,resultoperatorid integer  --对应的输出结果结算操作符ID
  ,isdistinct INTEGER  --输出是否去重
  ,ordernum INTEGER  --输出顺序，可同时用于排序顺序，分档顺序
  ,op1Id INTEGER  --操作符1ID
  ,op2Id INTEGER --操作符2ID
  ,place varchar(20)  --子句位置，where，result，group by，order by
  ,opconnectorid integer  --关系操作符 ID
  ,param1value VARCHAR (500)  --参数1数值
  ,param1type varchar(20)  --参数1类型，未使用
  ,param2value varchar (500)  --参数2数值
  ,param2type varchar(20)  --参数2类型，未使用
  ,outputtitle varchar(100)  --输出字段标题
  ,windowx INTEGER  --子窗口位置 X，界面展示用
  ,windowy INTEGER  --子窗口位置 Y，界面展示用
  ,primary key (ruleId)
);




create view columnview as
select
t1.colId
,t1.tableid
,t1.colname
,t1.coltype
,t1.colformat
,t1.colmaxlength
,t1.coldecimal
,t1.colfraction
,t1.comments
,t1.coltitle
,t1.defaultInputType
,t1.defaultCodeTable
,t2.dbtype
,t2.dbname
,t2.schemaname
,t2.tablename
,t2.tabletype
,t3.virtualtype
from columns t1 inner join tables t2
on t1.tableid=t2.tableid
inner join typemapping t3
on t1.coltype=t3.coltype;


create view filterreference as
select t1.filterid,count(t2.filterid) as referencecount from fieldfilter t1 left join jobrules t2 on t1.filterid=t2.filterid group by t1.filterid;

--数据分档操作表，如果用户指定分档操作，则分档数据存储在此表中
create table grouplayer(
        layerId integer not null GENERATED BY DEFAULT AS IDENTITY
            (START WITH 1
            INCREMENT BY 1
            NO MAXVALUE
            NO CYCLE
            )
        ,filterId integer  -- 对应维度ID filterID
        ,colId    integer   --对应字段 ID
        ,ruleId INTEGER  --对应 ruleId,ruleId优先于filterId
        ,layerName varchar(50) --分层名称
        ,operator1 varchar(20) --分层操作符1
        ,boundary1 varchar(20) --边界1，下限
        ,connector varchar(20) --关系操作符，and/OR
        ,operator2 varchar(20) --分层操作符2
        ,boundary2 varchar(20) --边界1，上限
        ,primary key(layerId)
);


alter table mdajob add jobtime timestamp; --预约时间戳


alter table columns add enableDetail integer not null default 1; --允许输出明细
alter table columns add preventOperator varchar(100) not null default ''
alter table columns add enableResult integer not null default 1; --允许在输出结果中出现
alter table columns add enableWhere integer not null default 1; --允许在where中出现
alter table columns add enableGroupBy integer not null default 1;  --允许在group by中出现
alter table columns add enableOrderBy integer not null default 1;  --允许在order by中出现

--维度分组信息，目前尚未使用
create table columngroup (
    groupId integer  not null GENERATED BY DEFAULT AS IDENTITY
            (START WITH 1
            INCREMENT BY 1
            NO MAXVALUE
            NO CYCLE
            )
    ,groupname varchar(20)  --分组名称
    ,groupDescription varchar(1000)  --分组描述
    ,PRIMARY KEY (groupId)
);

-- 字段按维度分组对应表
create table columnGroupMapping (
  groupid integer not null default 0,  --分组ID
  colId integer not null default 0  --字段ID
);

drop view columnview;
create view columnview as
select
t1.colId
,t1.tableid
,t1.colname
,t1.coltype
,t1.colformat
,t1.colmaxlength
,t1.coldecimal
,t1.colfraction
,t1.comments
,t1.coltitle
,t1.defaultInputType
,t1.defaultCodeTable
,t1.enableDetail
,t1.preventOperator
,t1.enableResult
,t1.enableWhere,
,t1.enableGroupBy
,t1.enableOrderBy
,t2.dbtype
,t2.dbname
,t2.schemaname
,t2.tablename
,t2.tabletype
,t3.virtualtype
from columns t1 inner join tables t2
on t1.tableid=t2.tableid
inner join typemapping t3
on t1.coltype=t3.coltype;
